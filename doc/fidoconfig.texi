\input texinfo @c -*-texinfo-*-
@c %**start of header
@setfilename fidoconfig.info
@set HPT HPT
@settitle FidoConfig Manual
@setchapternewpage odd
@c %**end of header

@copying
This file documents fidoconfig.

Copyright 1998-2018 Husky Development Team

@end copying

@titlepage
@title FidoConfig Manual
@subtitle a way to make your unix fido-capable
@author Matthias Tichy
@author Max Levenkov

@page
@vskip 0pt plus 1filll
Copyright @copyright{} 1998-2018 Husky Development Team

@end titlepage

@contents

@c @ifinfo

@dircategory Fidonet Software
@direntry
* Fidoconfig: (fidoconfig).     The format of the Husky common config file.
@end direntry

@node Top, design goals, (dir), (dir)
@top fidoconfig

This document describes the use of fidoconfig to make fido work on your
favorite platform.

This document applies to version 1.9 of fidoconfig.
@c @end ifinfo

@menu
* design goals::                what we want to achieve
* config file::                 how does it look like
* keywords::                    Common keywords reference
* converting::                  Converting fidoconfig
* tparser::                     testing your config
* contact::                     contacting the author
@end menu

@node design goals, config file, Top, Top
@chapter Design goals
The design goal of fidoconfig was to provide one config-file for several
different fido software packages like editor, tosser etc.
An additional aim was to have one library (fidoconfig) which can be used by
all programs.
The advantage is you only have to edit one config-file, so changing your
system is much easier than with common software packages. Also bugs can only
creep in one library and not in thousands over thousands libraries.
The config definition can be used in all operating systems. Also the library
should be quite portable.

@node config file, keywords, design goals, Top
@chapter Config file

@include proposal.texi

@node keywords, converting, config file, Top
@chapter Common Keywords Reference

@menu
* general keywords::            General keywords
* path log keywords::           Path- and log-related keywords
* packer keywords::             Packers and unpakers definition
* link keywords::               Link definition keywords (link section)
* area management keywords::    Keywords for area definition, area groups, and access
* autocreate keywords::         Keywords related to area autocreation (except those belonging to robot and link sections)
* robot keywords::              Robot definition keywords (robot section)
@end menu

@node general keywords, path log keywords, keywords, keywords
@section Common Keywords

@menu
* version::                     version of fidoconfig
* name::                        your system name
* location::                    your location
* sysop::                       your name
* include::                     include other files
* address::                     your system address
* commentChar::                 Comment character
* seqdir::                      path for msgid sequence stamp
* seqoutrun::                   max msgid seq outrun from current time
@end menu

@node version, name, general keywords, general keywords
@subsection version
@table @asis
@item Syntax:
@code{version <integer>.<integer>}
@item Example:
@code{version 1.9}
@end table

Here you specify which version of fidoconfig your config belongs to.
Currently this statement does nothing.

This statement cannot be repeated.

@node name, location, version, general keywords
@subsection name
@table @asis
@item Syntax:
@code{name <string>}
@item Example:
@code{name Leetebrok BBS}
@end table

Here you specify your system's name.

This statement cannot be repeated.

@node location, sysop, name, general keywords
@subsection location
@table @asis
@item Syntax:
@code{location <string>}
@item Example:
@code{location Dusseldorf}
@end table

You specify your location here.

This statement cannot be repeated.

@node sysop, include, location, general keywords
@subsection sysop
@table @asis
@item Syntax:
@code{sysop <string>}
@item Example:
@code{sysop Matthias Tichy}
@end table

You specify your name with this keyword.

This statement cannot be repeated.

@node include, address, sysop, general keywords
@subsection include
@table @asis
@item Syntax:
@code{include <file>}
@item Example:
@code{include /etc/fido/areas}
@end table

You can include other files into your config file. For example if you would like to
have different config parts, you can include a file and (via cron job or manually)
change the content of this file without changing the rest of the config.
Additionally you can split your config in different parts. So you can
have your fileareas definition in another file than your msgareas definition.
This gives you the ability to have some survey about your config.

This statement can be repeated. But don't make recursive includes, e.g.
include a file which includes another which includes the first. Although
this will be detected and fixed many times, there is a chance that it
will not be detected one time.

@node address, commentChar, include, general keywords
@subsection address
@table @asis
@item Syntax:
@code{Address <addr>}
@item Example:
@code{Address 2:2433/1245}
@end table

This command specifies which akas your system has. This statement is
full 5d compatible, which means you can have also addresses like
@code{2:2433/1245.1@@fidonet.org}. The first address statement is your
main aka which will be used by tosser on different occasions, for
example if zone number could not be taken from the @@INTL Kludge in
netmails.

This statement can be repeated.
@strong{The domain name is not full supported throughout fidoconfig}

@node commentChar, seqdir, address, general keywords
@subsection commentChar
@table @asis
@item Syntax:
@code{commentChar <char>}
@item Example:
@code{commentChar ;}
@end table

This command specifies which symbol is used to mark rest of line as comment.
Default is '#'

This statement can be repeated.

@node seqdir, seqoutrun, commentChar, general keywords
@subsection seqdir
@table @asis
@item Syntax:
@code{seqDir <path>}
@item Example:
@code{seqDir /var/spool/fido/seq}
@end table

Sets path for current msgid sequence stamp directory. This directory
should be used for msgid sequence stamp only to preventing surprises.
@xref{seqoutrun}.

By default environment variable SEQDIR is used.

This statement cannot be repeated.

@node seqoutrun,  , seqdir, general keywords
@subsection seqoutrun
@table @asis
@item Syntax:
@code{seqOutrun <string>}
@item Example:
@code{seqOutrun 1m}
@end table

Sets maximum outrun for msgid sequence from current time. @xref{seqdir}.

Use decimal number with optional suffix.

Suffixes are:

@table @asis
@item y - year (365 days)
@item m - month (31 days)
@item w - week (7 days)
@item d - day
@item h - hour
@end table

Set seconds without suffix.

By default environment variable SEQOUT is used, or 3y if it isn't set.

This statement cannot be repeated.

@node path log keywords, packer keywords, general keywords, keywords
@section Path- and log-related keywords

@menu
* Outbound::                    outbound path
* FileBoxesDir::                directory where fileBoxes of links are created
* Inbound::                     inbound path
* LocalInbound::                local inbound
* ProtInbound::                 protected inbound
* LockFile::                    file which lock programs session
* AdvisoryLock::                set lock file "advisory"
* tempDir::                     path for temporary files (possible memory disk)
* logfiledir::                  path for log files
* syslogfacility::              facility to use for syslogging
* loglevels::                   sets level of log output
* ScreenLogLevels::             sets level of log output to screen
* LogDateFormat::               set date format used in logs
* LogEchoToScreen::             set output to screen log information
* seqdir::                      path for msgid sequence stamp
@end menu

@node Outbound, FileBoxesDir, path log keywords, path log keywords
@subsection outbound
@table @asis
@item Syntax:
@code{outbound <path>}
@item Example:
@code{outbound /var/spool/fido/out}
@end table

This command specifies your outbound path. This outbound path is
binkley-style. A binkley style outbound consists of a base path and
subdirectories. Each subdirectory represents a place for all the files
for one zone. The base path is the zone path for your base zone.

Example:

@example
@table @asis
@item /var/spool/fido/out
This directory contains the files for your base zone.
@item /var/spool/fido/out.003
This directory contains the files for zone 3.
@item /var/spool/fido/out.00A
This directory contains the files for zone 10.
@end table
@end example

The zone directory contains the flow-files for each node. A Flow-file of a node
has the name NNNNFFFF.?lo

@example
@table @asis
@item NNNN
The 4-digit hex-number of the node's netnumber.
@item FFFF
The 4-digit hex-number of the node's nodenumber.
@item ?
Here the flavour of the mails can be chosen. @strong{h}-hold, @strong{c}-crash,
@strong{f}-normal, @strong{d}-direct, @strong{i}-immediate.
@end table
@end example

For points there is a subdirectory with nodes flowfilename with suffix.pnt. In
this subdirectory the flowfiles have the names PPPPPPPP ( 8-digit point number
in hex).

For a deeper background on a binkley-style outbound see the binkley-term
documentation and source code.

This statement cannot be repeated.

@node FileBoxesDir, Inbound, Outbound, path log keywords
@subsection FileBoxesDir
@findex FileBoxesDir
@table @asis
@item Syntax:
@code{FileBoxesDir <directory>}
@item Example:
@code{FileBoxesDir ../boxes}
@end table

This statement specifies directory where link file boxes are placed (and
created if necessary).  For prevention of collisions: @code{FileBoxesDir}
and @code{outbound} should be pointed into different directory paths and
even not be subdirectory of another.

@table @asis
@item Currently it is implemented support for the file box names in the following
form:
@code{z.n.f.p[.h]},
@item where:
@item z:
zone number;
@item n:
net number;
@item f:
node number;
@item p:
point number (point number is mandatory and should be zero for node);
@item .h:
optional suffix ".h" are specify the "hold" flavour.
@item In the example:
@code{FileBoxesDir /fido/fileboxes}
@item For the link with address @code{2:5021.19} will possibled two fileboxes:
@code{/fido/fileboxes/2.5021.19.0} and @code{/fido/fileboxes/2.5021.19.0.h}
@end table

This statement cannot be repeated.


@node Inbound, LocalInbound, FileBoxesDir, path log keywords
@subsection inbound
@table @asis
@item Syntax:
@code{inbound <path>}
@item Example:
@code{inbound /var/spool/fido/in}
@end table

This command specifies where your inbound files are stored. This directory
is the base directory which means if you have a connection which is not
protected and the other system is not listed the files go in here.
Only netmails are tossed from this inbound.

This statement cannot be repeated.

@node LocalInbound, ProtInbound, Inbound, path log keywords
@subsection LocalInbound
@findex LocalInbound
@table @asis
@item Syntax:
@code{localinbound <path>}
@item Example:
@code{localinbound /var/spool/fido/in.loc}
@end table

This command specifies the path, from which all types of netmail and echomail
are tossed @strong{without} any password checking. You can put pkt's here
which were created by a file tosser etc. So created by a you or a programm on
your own system.

This statement cannot be repeated.

@node ProtInbound, LockFile, LocalInbound, path log keywords
@subsection ProtInbound
@findex ProtInbound
@table @asis
@item Syntax:
@code{protinbound <path>}
@item Example:
@code{protinbound /var/spool/fido/in.sec}
@end table

This command specifies where files should be stored which were received
during a password-protected session.
All types of mail are tossed from this path. But passwords are checked
before.

This statement cannot be repeated.

@node LockFile, AdvisoryLock, ProtInbound, path log keywords
@subsection LockFile
@findex LockFile
@table @asis
@item Syntax:
@code{lockfile <file>}
@item Example:
@code{lockfile /var/lock/hpt.lock}
@end table

Another session of @value{HPT} will be terminated if the @code{LockFile}
is exists (default setting).

This statement cannot be repeated.

@xref{AdvisoryLock}.

@node AdvisoryLock, tempDir, LockFile, path log keywords
@subsection AdvisoryLock
@findex AdvisoryLock
@table @asis
@item Syntax:
@code{AdvisoryLock <integer>}
@item Example:
@code{AdvisoryLock 10}
@end table

If value @code{AdvisoryLock} > 0, then @value{HPT} checks if
@code{LockFile} is locked by another session of @value{HPT} or not.
Program will not be terminated if the original process which created
@code{LockFile} is running. Second instance of hpt will check @code{LockFile}
for locking number of times defined by @code{AdvisoryLock} with period
of 1 second. And if the file exists, but not locked
(stale), @value{HPT} will be running...
If @code{AdvisoryLock} = 0, advisorylock is off.

This statement cannot be repeated.

@strong{Don't use this under BeOS! (there is no locking mechanism).}

@xref{LockFile}.


@node tempDir, logfiledir, AdvisoryLock, path log keywords
@subsection tempDir
@table @asis
@item Syntax:
@code{tempDir <path>}
@item Example:
@code{tempDir /var/tmp}
@end table

This command specifies the path where the temporary files of the fido-programs
should be stored. This directory can be erased while booting. Good idea is to
set it to a memory disk.

Default value is path specified by TEMP, TMP or TMPDIR enviroment variables (use
TEMP first, if it not defined then use TMP, next use TMPDIR).
If these enviroment variables are not defined:
- win32 versions use %WINDIR%\TEMP (usually c:\windows\temp for Win9x/Me and
  c:\winnt\temp for Windows NT/2000/XP)
- versions for unix-like OS'es use /tmp
- other versions use c:\

This statement cannot be repeated.


@node logfiledir, syslogfacility, tempDir, path log keywords
@subsection logfiledir
@table @asis
@item Syntax:
@code{logFileDir <path>}
@item Example:
@code{logFileDir /var/spool/log/fido}
@end table

This command specifies the path where the log-files of the fido-programs should
be stored.

This statement cannot be repeated.

Some programs use logFileDir for persistent temporary/work files.

@node syslogfacility, loglevels, logfiledir, path log keywords
@subsection syslogfacility
@table @asis
@item Syntax:
@code{syslogFacility <facility>}
@item Example:
@code{syslogFacility local0}
@end table

Some Husky programs are able to write logs via syslogd instead of via log
file. For those programs, this keyword defines which facility to use for
writing to the syslog. Syslogd will use this facility name to decide which
syslog logfile the log messages will go to. Common names that can be used
include @code{mail}, @code{news}, @code{uucp}, @code{local0}. The exact
values that can be used depend upon your operating system. Refer to the man
page for @file{syslog.conf} or @file{/usr/include/sys/syslog.h} for more
information.

Logging via syslogd is only supported on UNIX platforms, and currently only
used by @file{herp}, but not by any other Husky program. If a Husky program
logs via log file or via syslog or both depends on the program and not on
your fidoconfig file. Consult the individual program's documentation.

@node loglevels, ScreenLogLevels, syslogfacility, path log keywords
@subsection LogLevels
@findex LogLevels
@table @asis
@item Syntax:
@code{loglevels <string>}
@item Example:
@code{loglevels 1345789,A-F Q}
@end table

This statement defines log levels list for writing messages into log file.
Hiphen is a range char (A-F expands to ABCDEF).
Only alpha & numeric log level characters are recognized, others are ignored.

In example we output to log messages with levels 3,4,5,7,8,9,A,B,C,D,E,F,Q.

The log levels are following:

@table @asis
@item 1 - Program start, end;
@item 2 - dupecheck
@item 3 - linking messages
@item 4 - scanning messages
@item 5 - posting messages
@item 6 - execute strings
@item 7 - bundles, pkts, links, freqs, file routing, file attachs, msg packing
@item 8 - areafix, relink, autocreate
@item 9 - error messages (critical, usually exit on error)
@item 0 - creation of file-flags
@item A - trivial error messages (print message and continue execution)
@item B - warnings & alerts
@item C - informational messages
@item D - statistics
@item E - summary
@item F - print program name & version
@item G - message send/sent
@item H - recoding operations & recoding tables read/write
@item I - Generate or check MSGID
@item J - Echomail phase
@item K - Filebox phase
@item L - Netmail phase
@item M - File create
@item N - File delete
@item O - operations with opened file (read, write, seek, ...)
@item P - Directory operations (create, delete, rename, ...)
@item Q - Email message parsing and construction
@item R - Truncate file
@item S - File send/sent
@item T - Test files (exist, permittions, etc.)
@item U - Functions calls (entering func & leaving it)
@item V - reserved
@item W - reserved
@item X - Filenames construction
@item Y - Link messagebase pass (some phase in hptlink & etc)
@item Z - debug messages: source lines (functions control points).
@item a-z - debug messages
@end table

Default value: 1234567890ABCDEF

This statement cannot be repeated.

@node ScreenLogLevels, LogDateFormat, loglevels, path log keywords
@subsection ScreenLogLevels
@findex ScreenLogLevels
@table @asis
@item Syntax:
@code{Screenloglevels <string>}
@item Example:
@code{Screenloglevels 2345789,A-C}
@end table

Sets levels of log output to screen. See loglevels for details.

This statement cannot be repeated.

@node LogDateFormat, LogEchoToScreen, ScreenLogLevels, path log keywords
@subsection LogDateFormat
@findex LogDateFormat
@table @asis
@item Syntax:
@code{logDateFormat <string>}
@item Example:
@code{logDateFormat "%H:%M:%S "}
@end table

Set date format for log messages. The parameter expected to be a valid
strftime() format string. The following macros are expanded to current
date/time value (incomplete list):

@multitable {Col1} {Biiiig Column 2 PADPADPADPADPADPADPADPADPADPADPADPADPADPADPADPADPADPADPADPAD}
@item %d
@tab current day of month as a decimal number, zero-prefixed (01-31)
@item %e
@tab current day or month as a decimal number, space-perfixed ( 1-31)
@item %H
@tab current hour as a decimal number (00-23)
@item %M
@tab current minute as a decimal number (00-59)
@item %m
@tab current month as a decimal number (01-12)
@item %S
@tab current second as a decimal number (00-59)
@item %Y
@tab current year with century as a decimal number (for example, 2005)
@item %y
@tab current year without century as a decimal number (for example, 05)
@item %A
@tab national representation of the full weekday name (for example, Monday)
@item %a
@tab national representation of the abbreviated weekday name (for example, Mon)
@item %B
@tab national representation of the full month name (for example, April)
@item %b
@tab national representation of the abbreviated month name (for example, Apr)
@end multitable

Please refer to strftime() manual page to see the complete list of macros
allowed. National representation of month or weekday name is determined by
the current locale.

This statement cannot be repeated.

@node LogEchoToScreen,  , LogDateFormat, path log keywords
@subsection LogEchoToScreen
@findex LogEchoToScreen
@table @asis
@item Syntax:
@code{logEchoToScreen <bool>}
@item Example:
@code{logEchoToScreen}
@end table

Enable or disable log messages screen output. See also @ref{ScreenLogLevels}.

This statement cannot be repeated.

@node packer keywords, link keywords, path log keywords, keywords
@section Packer definition keywords

@menu
* pack::                        definition for packer
* unpack::                      definition for unpacker
@end menu

@node pack, unpack, packer keywords, packer keywords
@subsection Pack
@findex Pack
@table @asis
@item Syntax:
@code{Pack zip|tgz|rar|arc|arj|..... <call>}
@item Example:
@code{Pack zip zip -9 -g -q $a $f}
@end table

This statement sets the command line call for the packer.
The file will be moved into the archive, that means the file will be
deleted from the harddisk. It only remains in the archive.

$a will be replaced by the archive file.

$f will be replaced by the file which should be packed into the archive.

If some husky program is compiled with hptzip, you can use the following definition to use internal zip packer:
@example

@code{Pack zip zipInternal}
@end example

@quotation Warning
You can't use shell input-output redirection chars under DOS or Win*
platforms: hpt implementation uses workaround for command.com bug and
doesn't run command.com to execute external commands such as
packers/unpackers. hpt calls OS function to execute them instead of
command.com.
@end quotation

@quotation Note
On some OSes, if a program called can't be found (can't be run) result of pack
command is undefined. (Example: DOS. Reason of this: command.com does not
return error code if executable file was not found.)
To prevent danger write full path name for packer program, please.
@end quotation

This statement can be repeated.

@node unpack,  , pack, packer keywords
@subsection Unpack
@findex Unpack
@table @asis
@item Syntax:
@code{Unpack "<call>" <offset> <matchcode>}
@item Example for DOS:
@example
Unpack  "c:\arc\pkunpak /r $a $p $f"                 0 1a
Unpack  "c:\arc\pak e /wn $a $p"                    -2 fe
Unpack  "c:\arc\lha e /m $a $p $f"                   2 2d6c68
Unpack  "c:\arc\zoo e:O $a $p $f"                    0 5a4f4f
Unpack  "c:\arc\jar e -y $a $p $f"                  14 1a4a61721b
# *.rar
Unpack  "c:\arc\unrar e -y -c- -o+ -inul $a $p $f"   0 52617221
# rar-sfx/DOS
Unpack  "c:\arc\unrar e -y -c- -o+ -inul $a $p $f"  28 52534658
@end example
@item Example for Linux:
@example
Unpack  "/usr/bin/zoo e:O $a $p $f"                    0 5a4f4f
Unpack  "/usr/bin/arc eno $a $p'*.*' $f"               0 1a
Unpack  "/usr/bin/unzip -joLqq $a -d $p $f"            0 504b0304
Unpack  "cd $p && /usr/bin/unarj e $a $f>/dev/null"    0 60ea
Unpack  "/usr/bin/unrar e -y -c- -o+ -inul $a $p $f"   0 52617221
Unpack  "/usr/bin/unrar e -y -c- -o+ -inul $a $p $f"  28 52534658
Unpack  "/usr/bin/jar e -y $a $p $f"                  14 1a4a61721b
Unpack  "cd $p && /usr/bin/ha eyq -e $a $f"            0 4841
@end example
@end table

This statement sets the call of certain unpackers according to the id in the
archive file

@code{call} is the command line call for the packer (enclosed into quotes!);

@code{offset} position of recognition string in packed file;

@code{match code} hexdump of the recognition string for packed file, ?? can be used as any byte;

@code{$a} will be replaced by the archive file to extract from;

@code{$p} will be replaced by the path to unpacked files (usually tempoutbound);
@quotation
@strong{HPT-specific:} @code{$p} will be replaced by the temp inbound path.
@end quotation

@code{$f} will be replaced by the description file name if any (used by htick, see 'FileDescName' token; possibly other husky programs).

@example

e.g.: unpack "unzip -joLqq $a -d $p $f" 0 504b0304

       files packed by zip can be recognized by
         504b0304(hex) at offset 0(integer)
       they can be unpacked by htick using command
       "unzip -joLqq <filename> -d <path> <descrption_filename>"

@end example

if some husky program is compiled with hptzip, you can use the following definition:
@example

@code{Unpack zipInternal 0 504b0304}
@end example

@quotation Warning
You can't use shell input-output redirection chars under DOS or Win*
platforms: hpt implementation uses workaround for command.com bug and
doesn't run command.com to execute external commands such as
packers/unpackers. hpt calls OS function to execute them instead of
command.com.
@end quotation

Also see hpt and htick documentation.

This statement can be repeated.

@quotation Note
On some OSes, if a program called can't be found (can't be run) result of unpack
command is undefined. (Example: MS DOS. Reason of this: command.com does not
return error code if executable file was not found.)
To prevent danger write full path name for unpacker program, please.
@end quotation

@node link keywords, area management keywords, packer keywords, keywords
@section Link definition keywords (Link section)

These keywords relate to Link section of config. Every link of your system should be defined
via it's own link entry. Definition of link begins with keyword @code{Link}.
Immediately after it you should put any settings for that link. Link section
is considered as closed on first keyword which isn't allowed in link section.
All the following keywords except @code{Link} and @code{LinkDefaults} which start section
are allowed inside it.

@quotation Note
'*' mark in keywords here means that it should be either substituted with robot's name
to which appropriate setting is applied or omitted to apply to all robots.
@end quotation

@menu
* link::                        adding a link to your config
* linkdefaults::                start/end/destroy link's default definitions
* aka::                         link's address
* ouraka::                      our aka for link
* password::                    link's default password
* pktpwd::                      pktpassword for this link
* ticpwd::                      ticker password for this link
* areafixpwd::                  areafix password for this link
* AreafixName::                 remote "areafix" name
* filefixpwd::                  filefix password for this link
* bbspwd::                      bbs password for this link (online user)
* sessionpwd::                  session password for this link
* handle::                      nickname or handle for link
* packer::                      default packer for link
* *AutoCreate::                 right to auto create areas on your system
* *AutoCreateFile::             file where autocreated areas by this links are going
* *AutoCreateDefaults::         set defaults to autocreated areas
* *AutoSubscribe::              automatically subscribe the link to autocreated areas
* *ForwardRequests::            allow forward requests to this link
* *FwdDenyFile::                file with area list for denyed requests
* *FwdDenyMask::                mask list for denyed requests
* *DenyFwdReqAccess::           deny access to forward requests
* *DenyUncondFwdReqAccess::     deny access to unconditional forward requests
* *FwdFile::                    file for forwardRequest, AvialableAreas & descriptions
* *FwdMask::                    mask list for forwardRequests
* *FwdPriority::                forward requests priority
* *EchoLimit::                  limit for subscribe via areafix
* Pause::                       don't export mail for this link
* Export::                      rules for echomail export
* Import::                      rules for echomail import
* OptGrp::                      groups for export/import/mandatory
* AccessGrp::                   groups for echomail access
* LinkGrp::                     add this group to autoCreateDefaults
* Mandatory::                   disable unsubscribing from all echoareas
* Manual::                      disable subscribing to all echoareas
* Level::                       definition of link access level
@end menu

@node link, linkdefaults, link keywords, link keywords
@subsection link
@table @asis
@item Syntax:
@code{link <string>}
@item Example:
@code{link Matthias Tichy}
@end table

This statement starts a new Link-definition. All the following link-related statements
change the configuration of this link until a new link statement is found.
A parameter is the name of this link.

This statement can be repeated.

@node linkdefaults, aka, link, link keywords
@subsection linkdefaults
@findex LinkDefaults
@table @asis
@item Syntax:
@code{linkdefaults [begin | end | destroy]}
@item Example:
@code{linkdefaults}
@end table

This statement starts section of default definitions of links.
All the following link-related statements change default configuration
of link until a @code{'link'} or @code{'linkdefaults end'} or
@code{'linkdefaults destroy'} statement is found.
All parameters collected in linkdefaults sections are copied to link
configuration every time when @code{'link'} statement is found in
configuration file. Link-related statements after @code{'linkdefaults end'} or
@code{'linkdefaults destroy'} or before first @code{'link'} or
@code{'linkdefaults'} statement are treated as error.
@code{'linkdefaults'} statement without @code{'begin'} or @code{'end'} means
@code{'linkdefaults begin'}
@code{'linkdefaults destroy'} destroys all default definitions.

Be careful with @code{Pause}, @code{Export}, etc. ;-)

This statement can be repeated. New definitions overwrite old ones.

@node aka, ouraka, linkdefaults, link keywords
@subsection aka
@table @asis
@item Syntax:
@code{aka <addr>}
@item Example:
@code{aka 2:2433/1245}
@end table

This statement sets the aka for the current link.

This statement can only be repeated for different links.

@node ouraka, password, aka, link keywords
@subsection ouraka
@table @asis
@item Syntax:
@code{ouraka <addr>}
@item Example:
@code{ouraka 2:2433/1247}
@end table

This statement sets the aka which is used for this link.

This statement can only be repeated for different links.

@node password, pktpwd, ouraka, link keywords
@subsection password
@table @asis
@item Syntax:
@code{password [<string>]}
@item Example:
@code{password secret}
@end table

This statement sets the default password for the link.
If you do not set the other passwords, this password will be used.
Password may be case insensitive or case sensitive depending on the program.

There is no limit for @code{Password} length except the @code{PktPwd}.

This statement can only be repeated for different links.

@node pktpwd, ticpwd, password, link keywords
@subsection pktpwd
@table @asis
@item Syntax:
@code{pktpwd [<string>]}
@item Example:
@code{pktpwd geheim}
@end table

This statement sets the pktpassword for the actual link.
Only passwords with maximal 8 characters are valid because of limitations of
other software packages.
An empty statement is allowed.

If you do not set the pktpwd, password from the common password statement
will be used (@xref{password}.)

This statement can only be repeated for different links.

@node ticpwd, areafixpwd, pktpwd, link keywords
@subsection ticpwd
@table @asis
@item Syntax:
@code{ticpwd [<string>]}
@item Example:
@code{ticpwd geheim}
@end table

This statement sets the ticker password for the actual link.
Only passwords with maximal 8 characters are valid because of limitations of
other software packages.
An empty statement is allowed.

If you do not set the ticpwd, password from the common password statement
will be used (@xref{password}.)

This statement can only be repeated for different links.

@node areafixpwd, AreafixName, ticpwd, link keywords
@subsection areafixpwd
@table @asis
@item Syntax:
@code{areafixpwd [<string>]}
@item Example:
@code{areafixpwd geheim}
@end table

This statement sets the areafix password for the actual link.
An empty statement is allowed, but not recommended.

If you do not set the areafixpwd, password from the common password statement
will be used (@xref{password}.)

This statement can only be repeated for different links.

@node AreafixName, filefixpwd, areafixpwd, link keywords
@subsection AreafixName
@findex AreafixName
@table @asis
@item Syntax:
@code{remoteRobotName <string>}
@item Example:
@code{remoteRobotName allfix}
@end table

Set remote system "areafix" to new name. This token used when requests
to subscribing/unsubscribing of new areas forwarded to this link.

This statement can only be repeated for different links.

@node filefixpwd, bbspwd, AreafixName, link keywords
@subsection filefixpwd
@table @asis
@item Syntax:
@code{filefixpwd [<string>]}
@item Example:
@code{filefixpwd geheim}
@end table

This statement sets the filefix password for the actual link.
An empty statement is allowed, but not recommended.

If you do not set the filefixpwd, password from the common password statement
will be used (@xref{password}.)

This statement can only be repeated for different links.

@node bbspwd, sessionpwd, filefixpwd, link keywords
@subsection bbspwd
@table @asis
@item Syntax:
@code{bbspwd [<string>]}
@item Example:
@code{bbspwd geheim}
@end table

This statement sets the bbs password for the actual link.
An empty statement is allowed.

If you do not set the bbspwd, password from the common password statement
will be used (@xref{password}.)

This statement can only be repeated for different links.

@node sessionpwd, handle, bbspwd, link keywords
@subsection sessionpwd
@table @asis
@item Syntax:
@code{sessionpwd [<string>]}
@item Example:
@code{sessionpwd geheim}
@end table

This statement sets the session password for the actual link.
An empty statement is allowed.

If you do not set the sessionpwd, password from the common password statement
will be used (@xref{password}.)

This statement can only be repeated for different links.

@node handle, packer, sessionpwd, link keywords
@subsection handle
@table @asis
@item Syntax:
@code{handle <name>}
@item Example:
@code{handle eddie}
@end table

This statements gives a link a nickname. This statement is supposed for bbs
systems.

This statement can only be repeated for different links.

@node packer, *AutoCreate, handle, link keywords
@subsection packer
@table @asis
@item Syntax:
@code{packer <packer>}
@item Example:
@code{packer zip}
@end table

This statement sets the packer for the link. You can use the packer
which you has set up using the @code{Pack} statement. If you omit this
statement or set @code{Packer none} no mail will be packed. The pkt's
will be stored in the outbound.

If you use hptzip (Zlib) library, you can set <packer> - zip.

This statement can only be repeated for different links.

@node *AutoCreate, *AutoCreateFile, packer, link keywords
@subsection *AutoCreate
@findex *AutoCreate
@table @asis
@item Syntax:
@code{<robot name>autocreate <bool>}
@item Example:
@code{areafixAutoCreate on}@*
@code{filefixAutoCreate on}
@end table

This statement gives a link the permission to create echoareas on your system just
by sending messages in them and fileareas by sending files in the areas.

The echoareas are created using the @code{areafixAutoCreateDefaults} contents:
@example
   EchoArea <areaName> <msgBaseDir><areaName> -a <mypktaddr> -b Squish <areafixAutoCreateDefaults> <linkAddr>
@end example

Default message base type is Squish. But you can set "-b Jam" or "-b
Msg" in @code{areafixAutoCreateDefaults}.

Similar rules apply to creating fileareas.

This statement can only be repeated for different links.

@node *AutoCreateFile, *AutoCreateDefaults, *AutoCreate, link keywords
@subsection *AutoCreateFile
@findex *AutoCreateFile
@table @asis
@item Syntax:
@code{<robot name>autoCreateFile <file>}
@item Example:
@code{areafixAutoCreateFile /etc/fido/areas.matthias}@*
@code{filefixAutoCreateFile /etc/fido/fareas}
@end table

This statement defines where autocreated areas by this link are going to.
If you omit this statement the default configuration file will be used.
The tosser must have the rights to create and change the file.

@strong{You must include the specified file for yourself into fidoconfig,
so these autocreated areas will be founded in subsequent tosser-runs.}

@strong{autoCreateFile and Include strings must be the *same*.}

This statement can only be repeated for different links.

@node *AutoCreateDefaults, *AutoSubscribe, *AutoCreateFile, link keywords
@subsection *AutoCreateDefaults
@findex *AutoCreateDefaults
@table @asis
@item Syntax:
@code{<robot name>autoCreateDefaults <string>}
@item Example:
@code{areafixAutoCreateDefaults -$m 200 -dupecheck move}@*
@code{filefixAutoCreateDefaults -p 90}
@end table

Set default options for autocreated echo or file areas. Please do not put
any paths or @code{passthrough} keyword here, use @code{MsgBaseDir} or 
@code{FileAreaBaseDir} for that globally or @code{LinkMsgBaseDir} and 
@code{LinkFileBaseDir} for specific links.

When an echo (or fileecho) is created, @code{EchoArea} (or @code{FileArea})
keyword is written to the area declaration first, then areaname, then path 
to the area file (area directory for fileecho) or @code{passthrough} keyword,
then the options from @code{AutoCreateDefaults} and after that the address 
of the link creating the area. The options from @code{AutoCreateDefaults} 
override the options from the current @ref{EchoAreaDefaults} or
@ref{fileAreaDefaults,,,htick}.

This statement can only be repeated for different links.

@node *AutoSubscribe, *ForwardRequests, *AutoCreateDefaults, link keywords
@subsection *AutoSubscribe
@findex *AutoSubscribe
@table @asis
@item Syntax:
@code{<robot name>AutoSubscribe <bool>}
@item Example:
@code{areafixAutoSubscribe on}@*
@code{filefixAutoSubscribe on}
@end table

Automatically subscribe the link to all autocreated areas. On default it
is off for all links. The value of @code{AutoSubscribe} does not influence
already existing areas. If you want to subscribe a link to all existing
areas in a group, use @ref{EchoAreaDefaults} or @ref{fileAreaDefaults,,,htick}.

This statement can only be repeated for different links.

@node *ForwardRequests, *FwdDenyFile, *AutoSubscribe, link keywords
@subsection *ForwardRequests
@findex *ForwardRequests
@table @asis
@item Syntax:
@code{<robot name>forwardRequests <bool>}
@item Example:
@code{areafixforwardRequests on}@*
@code{filefixforwardRequests on}
@end table

By default "forwardRequests" are off. "On" allows forward requests to this
link from other links. If neither @code{forwardRequestFile} nor
@code{forwardRequestMask} are defined, then requests will be forwarded unconditionally.

@code{LinkGrp} can deny access to some links...

This statement can only be repeated for different links.

@xref{LinkGrp}.

@node *FwdDenyFile, *FwdDenyMask, *ForwardRequests, link keywords
@subsection *FwdDenyFile
@findex *FwdDenyFile
@table @asis
@item Syntax:
@code{<robot name>FwdDenyFile <file>}
@item Example:
@code{areafixFwdDenyFile /etc/fido/denyfwdafix}@*
@code{filefixFwdDenyFile /etc/fido/denyfwdffix}
@end table

Don't forward requests for areas from this file.
@strong{Pattern matching does not supporting!}

This statement can only be repeated for different links.

@node *FwdDenyMask, *DenyFwdReqAccess, *FwdDenyFile, link keywords
@subsection *FwdDenyMask
@findex *FwdDenyMask
@table @asis
@item Syntax:
@code{<robot name>FwdDenyMask <string>[,<string> ...]}
@item Example:
@code{areafixFwdDenyMask TYT.*, *FLAME*}@*
@code{filefixFwdDenyMask RAIL*}
@end table

Don't forward the requests matching the masks.

This statement can only be repeated for different links.

@node *DenyFwdReqAccess, *DenyUncondFwdReqAccess, *FwdDenyMask, link keywords
@subsection *DenyFwdReqAccess
@findex *DenyFwdReqAccess
@table @asis
@item Syntax:
@code{<robot name>denyFwdReqAccess <bool>}
@item Example:
@code{areafixDenyFwdReqAccess}@*
@code{filefixDenyFwdReqAccess}
@end table

Don't allow forward requests from this link (via @verb{|<robot name>|}) to your
links.

This statement can only be repeated for different links.

@node *DenyUncondFwdReqAccess, *FwdFile, *DenyFwdReqAccess, link keywords
@subsection *DenyUncondFwdReqAccess
@findex *DenyUncondFwdReqAccess
@table @asis
@item Syntax:
@code{<robot name>denyUncondFwdReqAccess <bool>}
@item Example:
@code{areafixDenyUncondFwdReqAccess}@*
@code{filefixDenyUncondFwdReqAccess}
@end table

Don't allow unconditional forward requests from this link (via @verb{|<robot name>|})
to your links.

This statement can only be repeated for different links.

@node *FwdFile, *FwdMask, *DenyUncondFwdReqAccess, link keywords
@subsection *FwdFile
@findex *FwdFile
@table @asis
@item Syntax:
@code{<robot name>FwdFile <file>}
@item Example:
@code{areafixFwdFile /etc/fido/echo777.lst}@*
@code{filefixFwdFile /etc/fido/fecho777.lst}
@end table

The file contains a list of areas for which forward requests 
to the link are possible. If the file contains area descriptions 
they will be used when autocreating areas. If not defined then 
forward requests will be unconditional.

This statement can only be repeated for different links.

@node *FwdMask, *FwdPriority, *FwdFile, link keywords
@subsection *FwdMask
@findex *FwdMask
@table @asis
@item Syntax:
@code{<robot name>FwdMask <string>[,<string> ...]}
@item Example:
@code{areafixFwdMask nsk.*}@*
@code{filefixFwdMask book*}
@end table

If area nsk.* (nsk.test for example) will be requested by a downlink and
forward requests to the uplink are allowed, then it is created and request
goes to uplink. If the area doesn't match to any mask in the list, then the
next link is checked for a possibility of the forward request.

This statement can only be repeated for different links.

@node *FwdPriority, *EchoLimit, *FwdMask, link keywords
@subsection *FwdPriority
@findex *FwdPriority
@table @asis
@item Syntax:
@code{<robot name>FwdPriority <integer>}
@item Example:
@code{areafixFwdPriority 1}@*
@code{filefixFwdPriority 5}
@end table

By default the robot (areafix or filefix) checks every link sequentially in the order
the links are defined in config whether the request can be forwarded to the link. 
But you can set a priority for some links... "1" is the 
first link to forward requests, "2" is the second, etc.

This statement can only be repeated for different links.

@node *EchoLimit, Pause, *FwdPriority, link keywords
@subsection *EchoLimit
@findex *EchoLimit
@table @asis
@item Syntax:
@code{EchoLimit <integer>}
@item Example:
@code{EchoLimit 50}
@end table

This is maximum areas which can be subscribed via * robot for this link.

This statement can only be repeated for different links.

@node Pause, Export, *EchoLimit, link keywords
@subsection Pause
@findex Pause
@table @asis
@item Syntax:
@code{pause ([on]|off|earea|farea)}
@item Examples:
@code{pause}
@code{pause earea}
@code{pause}
@end table

Stop export echomail, fileechoes or both for this link.

This statement can only be repeated for different links.

See also @ref{AutoPause,,,hpt,hpt} section.

@node Export, Import, Pause, link keywords
@subsection Export
@findex Export
@table @asis
@item Syntax:
@code{export <bool>}
@item Example:
@code{export off}
@end table

By default "Export on".

If "Export" is "off", mail is not tossed to link. You can restrict effect
of this setting to particular groups. @ref{OptGrp} 

This statement can only be repeated for different links.

@node Import, OptGrp, Export, link keywords
@subsection Import
@findex Import
@table @asis
@item Syntax:
@code{import <bool>}
@item Example:
@code{import off}
@end table

By default "import on".

Same as @code{Export}, but this is for mail @strong{from} link.

This statement can only be repeated for different links.

@node OptGrp, AccessGrp, Import, link keywords
@subsection OptGrp
@findex OptGrp
@table @asis
@item Syntax:
@code{optgrp <string>[,<string> ...]}
@item Example:
@code{optgrp A,X,Fido}
@end table

This setting restricts effect of @code{Export}, @code{Import} & @code{Mandatory} options
to the given groups. If @code{OptGrp} is not defined - the restrictions
will be applied to @strong{all} areas. If @code{OptGrp} is defined
then link will have default import/export access to all groups other than
explicitly given in this statement.

This statement can only be repeated for different links.

@node AccessGrp, LinkGrp, OptGrp, link keywords
@subsection AccessGrp
@findex AccessGrp
@table @asis
@item Syntax:
@code{accessgrp <string>[,<string>...]}
@item Example:
@code{accessgrp A,B,C,Local}
@end table

This statement connects a link to several echomail groups. See also
@code{PublicGroup} and @code{-g <group>} in echoarea options.

This statement can only be repeated for different links.

@node LinkGrp, Mandatory, AccessGrp, link keywords
@subsection LinkGrp
@findex LinkGrp
@table @asis
@item Syntax:
@code{linkgrp <string>}
@item Example:
@code{linkgrp Fido}
@end table

Specifies a group to use for areas auto-created from this link. Also link
can delete echo areas in his @code{LinkGrp} group.

In this example:

1) string @code{Fido} will be added to a new area record unless
@code{areaixAutoCreateDefaults} defines an implicit group;

2) links that have no access to the @code{Fido} group can't forward requests
to uplink with @code{LinkGrp Fido};

3) this link can delete echo areas with @code{-g Fido} group.

This statement can only be repeated for different links.

@node Mandatory, Manual, LinkGrp, link keywords
@subsection Mandatory
@findex Mandatory
@table @asis
@item Syntax:
@code{mandatory <bool>}
@item Example:
@code{mandatory on}
@end table

By default "mandatory off".

This statement disallows the link to unsubscribe areas via areafix.

This statement can only be repeated for different links.

@node Manual, Level, Mandatory, link keywords
@subsection Manual
@findex Manual
@table @asis
@item Syntax:
@code{manual <bool>}
@item Example:
@code{manual on}
@end table

By default "manual off".

This statement disallows the link to subscribe areas via areafix.

This statement can only be repeated for different links.

@node Level,  , Manual, link keywords
@subsection Level
@findex Level
@table @asis
@item Syntax:
@code{level <non-negative integer>}
@item Example:
@code{level 200}
@end table

An access level of a link to areas. By default it is "level 0". 
Used to control the link's read/write access to areas. The value has no meaning 
by itself but only in relation to echo or file echo options -lr and -lw. 
@xref{EchoArea}. If, for example, you set @code{Level 35} for a link then 
the link will have read access to all areas with @code{-lr} equal or less than @code{35} 
and write access to all areas with @code{-lw} equal or less than @code{35}.

This statement can only be repeated for different links.


@c <!------------------------------------------------------------------------------------------------------>

@node area management keywords, autocreate keywords, link keywords, keywords
@section Area management keywords

@menu
* EchoArea::                    definition of echoarea
* EchoAreaDefaults::            defaults for echoarea
* BadArea::                     definition of badarea
* DupeArea::                    definition of dupearea
* NetMailArea::                 definition of netmailarea
* NetArea::                     same as netmailarea
* RobotsArea::                  definition of robotsarea
* LocalArea::                   definition of the BBS message area
* FileArea::                    definition of filearea
* BbsArea::                     definition of the BBS file area
* AreaGroup::                   definition of areagroup
* AreaGroupDefaults::           default options for areas in group
* GrpDesc::                     area group description
* PublicGroup::                 this is a list of area groups for public acess
* ReadOnly::                    set link(s) readonly for area(s)
* WriteOnly::                   set link(s) writeonly for area(s)
@end menu

@node EchoArea, EchoAreaDefaults, area management keywords, area management keywords
@subsection EchoArea
@findex EchoArea
@table @asis
@item Syntax:
@code{EchoArea <name> <file> [-b <msgbase>] [Options] [linkAKA [linkOptions]]...}
@item Example:
@code{EchoArea linux.develop.ger /var/spool/fido/msgb/linux.develop.ger
-b Squish -a 2:2433/1247 -g A -dupeCheck move -dupehistory 11 -d "Linux
development" 2:2433/1245 -def}
@end table

This statement specifies the echoareas.
@table @asis
@item @strong{name}:
area-tag
@item @strong{file}:
filename(s) for this area without extension;
should be the area-tag (as far as possible). if file == Passthrough then
[-b <msgbase>] is skipped and msgarea is set as an passthrough area.
@item @strong{msgbase}:
@code{Msg} is standard (OPUS *.msg-base). Write @code{Squish} for an
Squish-msgbase and @code{Jam} for Jam-msgbase.
@item @strong{linkAKA}:
aka's of up- and down links (full 4D address).
you can use masks like: "*:*/*" - all downlinks from you config.
These links are auto-mandatory. Always use slash in mask!
@item @strong{linkOptions}:
Each linkOption refers only to one specific link, after which it is written.
@end table

@strong{Options}:

@table @asis
@item -pass
define area as passthrough even if msgbase type or filename is defined.
@item -lr <non-negative integer>
required level for a link to have read access to the area (for an explanation @xref{Level}.);
@item -lw <non-negative integer>
required level for a link to have write access to the area (for an explanation @xref{Level}.);
@item -mandatory
forbid to unsubscribe from this echo;
@item -noMandatory
enable unsubscribe from this echo if echoareadefaults set @code{-mandatory};
@item -manual
disallow remote subscribe (only manual connect);
@item -noManual
allow remote subscribe (using netmail to areafix) if echoareadefaults set @code{-manual};
@item -p <integer>
purge after n days: used by purging utilities like sqpack (*); default value is 0;
@item -$m <integer>
leave max n messages after purge in area (*); default value is 0;
@item -noPack
do not purge or pack area (overrides -p & -$m) (*)
@item -pack
enable purge or pack area (*) if echoareadefaults set @code{-noPack};
@item -killRead
kill read msgs in area on purging (*)
@item -noKillRead
disable kill read msgs in area on purging (*) if echoareadefaults set @code{-killRead};
@item -keepUnread
keep unread msgs in area on purging (*)
@item -nokeepUnread
do not keep unread msgs in area on purging (*) if echoareadefaults set @code{-keepUnread};
@item -kill
kill messagebase of area when setting it to passthrough
@item -nokill
do not kill messagebase when setting area to passthrough if echoareadefaults set @code{-kill};
@item -a <addr>
aka to use (first address from config if not defined)
@item -b <msgbase type>
type of msgbase (Msg, Squish, Jam) (*)
@item -g <group>
group for this echoarea
@item -keepsb
keep seen-by kludges (used in CarbonCopy)
@item -nokeepsb
do not keep seen-by kludges (used in CarbonCopy) if echoareadefaults set @code{-keepsb};
@item -tinysb
no seen-by kludges stores in message base (*)
@item -notinysb
seen-by kludges stores in message base (*) if echoareadefaults set @code{-tinysb};
@item -killsb
no seen-by & path kludges stores in message base (*)
@item -nokillsb
seen-by & path kludges stores in message base (*) if echoareadefaults set @code{-killsb};
@item -dosfile
file name of area is in dos style (8+3). Please be aware of the fact that
this will currently automatically disable the autoAreaCreateSubdirs feature.
@item -nodosfile
file name of area is in long filename style if echoareadefaults set @code{-dosfile};
@item -hide
hide area in areafix reports (%list & etc.);
@item -nohide
show area in areafix reports (%list & etc.) if disabled in echoareadefaults;
@item -d "Description for the area between double quote (like this)"
describe area (for areafix reports & etc.);
@item -nopause
%PAUSE has no effect to this area;
@item -pause
%PAUSE has effect to this area if disabled in echoareadefaults;
@item -paused
Area is paused (unsubscribed at uplink). This flag is automatically set and
cleared by hpt if ,@xref{AutoAreaPause}, enabled.
@item -noautoareapause
Do not automatically pause area even if ,@xref{AutoAreaPause}, is enabled.
@item -autoareapause
Automatically pause area (if ,@xref{AutoAreaPause}, is enabled).
@item -ccoff
disables carbonCopies for this area;
@item -noccoff or -ccon
enables carbonCopies for this area if disabled in echoareadefaults;
@item -DupeCheck off|move|del
toss dupes, move dupes to @code{DupeArea} or delete dupes.
@item -DupeHistory <unsignedInteger>
size of dupecheck history file in days for all dupe base types
except @code{CommonDupeBase}, 7 days if not defined 
(@xref{AreasMaxDupeAge,,,hpt,hpt}.);
@item -nolink
disables reply-linking for this area (*);
@item -link
enables reply-linking for this area (*) if disabled in echoareadefaults;
@item -scan listed|manual|never
conditions to scan area: if listed in echotoss file or "-a" option; if run with "-a" option; or never
@item -debug
write debug info about this area to areaname.dbg (or common.dbg if "-dosfile" is used)
@item -nodebug
disable debug output if defined in echoareadefaults;
@item -sbadd(<addr2D>,...)
add seen-by(s) at tossing time;
@item -sbign(<addr2D>,...)
ignore seen-by(s) and toss mail to link(s).
@item -sbstrip(<addr2D>,...)
Remove specified seen-bys (done before -sbadd). Can be combined with -sbkeepAll.
@item -sbkeep(<addr2D>,...)
Keep specified seen-bys when zone-gating.
@item -sbkeepAll
Keep all seen-bys when zone-gating (prevails over -sbkeep).
@item -nosbkeepAll
Disable -sbkeepAll if enabled for example by @code{EchoAreaDefaults}.
@item -tooOld <number of days>
Move incoming echomail older than the given number of days to BadMail (0 = disabled).
A value >= 90 is recommended! A value too low will filter legitimate traffic.
@item -tooNew <number of days>
Move incoming echomail newer than the given number of days to BadMail (0 = disabled).
A value >= 30 is recommended! A value too low will filter legitimate traffic.
@item -r
Default read-only: set link read-only at subscribing
@item -w
Default write-only: set link write-only at subscribing
@end table

(*) - these tokens to be removed from @code{areafixAutoCreateDefaults} when
creating passthrough areas.

@strong{LinkOptions}:
@table @asis
@item -def
default-uplink (used for area deletion, @xref{AdvancedAreafix,,,hpt,hpt}.)
@item -r
this link is read only
@item -w
this link is write only
@item -mn
this link is mandatory subscribed,
you may also set: "<aka> -r -mn" or "<aka> -w -mn" and so on...

Link Options -r -w are left for backward compatibility. We strongly recommend to
use tokens ReadOnly & WriteOnly for setting permissions on arealinks.
@end table

This statement can be repeated.

@subsection Note.
The msgbase @code{MSG} is limited to 65536 messages. This is SMAPI
implementation limit.

@node EchoAreaDefaults, BadArea, EchoArea, area management keywords
@subsection EchoAreaDefaults
@findex EchoAreaDefaults
@table @asis
@item Syntax:
@code{EchoAreaDefaults [passthrough | -b <msgbase>] [Options] [linkAKAs] [linkOptions]}
@item Example:
@code{EchoAreaDefaults -b Squish -a 2:280/1507 -g F -dupeCheck move -dupehistory 11 -p 14 2:280/1126}
@end table

With this keyword you can specify settings that will be set for the
@code{EchoArea} and @code{LocalArea} definitions that follow. It makes
the echoarea definitions shorter. All echoarea settings can be used
@strong{except} the areaname and message base path.

When you specify a different value in an echoarea definition, it
overrules the default setting.

With the default from the example above, an echoarea definition could be:

@example
EchoArea fidosoft.husky /var/spool/fido/msgb/fidosoft.husky -d "husky
development" 2:280/6207
@end example

This will internally be expanded to:

@example
EchoArea fidosoft.husky /var/spool/fido/msgb/fidosoft.husky -d "husky
development" -b Squish -a 2:280/1507 -g F -dupeCheck move -dupehistory 11
-p 14 2:280/1126 2:280/6207
@end example

Another example:

@example
EchoArea evolution /var/spool/fido/msgb/evolution -d "about fantasies" -p 100
@end example

that will be expanded to:

@example
EchoArea evolution /var/spool/fido/msgb/evolution -d "about fantasies"
-b Squish -a 2:280/1507 -g F -dupeCheck move -dupehistory 11 -p 100
2:280/1126
@end example

As you will notice, the default settings are combined with the
additional settings in the EchoArea definition, and the messages are
purged after 100 days instead of 14 (the default).

This statement can be repeated.

An @code{EchoAreaDefults} setting is valid until a next @code{EchoAreaDefaults}
setting.
@code{EchoAreaDefaults} can also be switched off with an empty definition:

@example
EchoAreaDefaults [OFF]
@end example

The word 'OFF' is not needed but makes it more readable.

@node BadArea, DupeArea, EchoAreaDefaults, area management keywords
@subsection BadArea
@findex BadArea
@table @asis
@item Syntax:
@code{BadArea <name> <file> [-b <msgbase>] [Options]}
@item Example:
@code{BadArea badarea /var/spool/fido/msgb/bad -b Squish}
@end table

This statement specifies the BadArea. Messages which have no area on
your system go to the badArea.
@xref{EchoArea}, for details on @code{Options}.
Like all areas BadArea is *.msg base per default.

This statement cannot be repeated.

@node DupeArea, NetMailArea, BadArea, area management keywords
@subsection DupeArea
@findex DupeArea
@table @asis
@item Syntax:
@code{dupeArea <name> <file> [-b <msgbase>] [Options]}
@item Example:
@code{dupeArea dupeArea  /var/spool/fido/msgb/dupes -b Squish}
@end table

This statement specifies the DupeArea. Messages which area dupes
e.g. come to your system the second time, will be put in the DupeArea.
@xref{EchoArea}, for details on @code{Options}.
Like all areas DupeArea is *.msg base per default.

This statement cannot be repeated.

@node NetMailArea, NetArea, DupeArea, area management keywords
@subsection NetMailArea
@findex NetMailArea
@table @asis
@item Syntax:
@code{NetmailArea <name> <file> [-b <msgbase>] [Options]}
@item Example:
@code{NetmailArea netmail /var/spool/fido/msgb/netmail -b Squish}
@end table

This statement specifies the @code{NetMailArea}. @xref{EchoArea},
for details on @code{Options}. Like all areas NetmailAreas is *.msg
bases per default.

This statement can be repeated to use different netmailareas.

@xref{NetArea}.

This statement can be repeated.

@node NetArea, RobotsArea, NetMailArea, area management keywords
@subsection NetArea
@findex NetArea
@table @asis
@item Syntax:
@code{NetArea <name> <file> [-b <msgbase>] [Options]}
@item Example:
@code{NetArea netmail /var/spool/fido/msgb/netmail -b Squish}
@end table

@xref{NetMailArea}.

This statement can be repeated.

@node RobotsArea, LocalArea, NetArea, area management keywords
@subsection robotsarea
@table @asis
@item Syntax:
@code{robotsArea <string>}
@item Example:
@code{robotsArea SecondNetMail}
@end table

Specifies area used for areafix and filefix scanning. Replies from robots will
also be stored here. @strong{RobotsArea must be NetmailArea for security purposes!}

This statement cannot be repeated.

@node LocalArea, FileArea, RobotsArea, area management keywords
@subsection LocalArea
@findex LocalArea
@table @asis
@item Syntax:
@code{LocalArea <name> <file> [-b <msgbase>] [Options]}
@item Example:
@code{LocalArea linux.develop.ger /var/spool/fido/msgb/linux.develop.ger -b Squish -a 2:2433/1247 -dupeCheck move -dupehistory 11 -d "Linux development"}
@end table

This statement creates an @code{LocalArea}. The only difference between
a @code{LocalArea} and an @code{EchoArea} is that a @code{LocalArea} has
no links and is not scanned for new mails.

This statement can be repeated.


@node FileArea, BbsArea, LocalArea, area management keywords
@subsection filearea
@table @asis
@item Syntax:
@code{FileArea <name> <fileareapath> <uplink> [options] [<downlinks>]}
@item Example:
@code{filearea Photoes /var/spool/fido/fileecho/Photoes 2:50/1 -d "Sysop photoes"}
@end table

This statement specifies the @code{FileArea}: fileecho definition.
Read HTick documentation for details.


@node BbsArea, AreaGroup, FileArea, area management keywords
@subsection bbsarea
@table @asis
@item Syntax:
@code{bbsarea <name> <bbsareapath>}
@item Example:
@code{BBSarea Incoming /var/spool/fido/BBS/incoming}
@end table

This statement specifies the @code{BBSArea}: BBS file area definition.
It's used for filelist building.
Read HTick documentation for details.

@node AreaGroup, AreaGroupDefaults, BbsArea, area management keywords
@subsection AreaGroup
@findex AreaGroup
@table @asis
@item Syntax:
@code{AreaGroup <group name> <pattern list>}
@item Example:
@code{AreaGroup RUSSIAN ru.* su.*}
@end table

You can group areas by their names and then apply some default options to such
areas. <group name> is a unique handle for every group. <pattern list> is a
list of patterns with wich area names will be compared. If area name equals
to some of patterns in group it will be assigned to this group.
Pattern lookup will be performed in order you wrote them.

If you define AreaGroup once and then define it again with the same name
patterns from these two definitions will be joined.

@example
AreaGroup DN dn.*
AreaGroup DN dnepr.* 464.*

will produce patterns as if you define

AreaGroup DN dn.* dnepr.* 464.*
@end example

This statement can be repeated.

@node AreaGroupDefaults, GrpDesc, AreaGroup, area management keywords
@subsection AreaGroupDefaults
@findex AreaGroupDefaults
@table @asis
@item Syntax:
@code{AreaGroupDefaults <group name> <options>}
@item Example:
@code{AreaGroupDefaults RUSSIAN -p 14 -dupehistory 11}
@end table

This token defines default options for areas in group (see @code{AreaGroup}
token). Options are the same as in EchoArea or EchoAreaDefaults.
Parsing priority:
EchoAreaDefaults (if defined)
AreaGroupDefaults (if areaName suits pattern from one of groups)
EchoArea

@node GrpDesc, PublicGroup, AreaGroupDefaults, area management keywords
@subsection grpdesc
@table @asis
@item Syntax:
@code{grpDesc <group name> <group description>}
@item Examples:
@code{grpDesc A "Echomail areas from 2:5020/52"}
@code{grpDesc Pvt Private areas}
@end table

This statement defines description for the group of areas. Both name and
description can be optionally enclosed by double quotes ("). Note that you
can use a variable-length string for group name, not just a single char.

This statement can be repeated.

@node PublicGroup, ReadOnly, GrpDesc, area management keywords
@subsection PublicGroup
@findex PublicGroup
@table @asis
@item Syntax:
@code{PublicGroup <string>[,<string>,...] }
@item Example:
@code{PublicGroup local,a,b,othernet}
@end table

Specifies groups for public echo acess.

This statement cannot be repeated.

@node ReadOnly, WriteOnly, PublicGroup, area management keywords
@subsection ReadOnly
@findex ReadOnly
@table @asis
@item Syntax:
@code{ReadOnly <addressMask> <areaMask>}
@item Example:
@code{ReadOnly 2:5021/19.* tver.sysop*}
@end table

This statement set one or many links to writeonly for specified area masks.
If you write node address do it *without* trailing .0!

If areaMask begins with '!' symbol it means that links won't be set
readonly for areas that match areaMask

@example
    ReadOnly 2:5021/19.* tver.sysop*
    ReadOnly 2:5021/19.1 !tver.sysop*
    ReadOnly 2:5021/19.2 !tver.sysop.talks
    ReadOnly 2:5021/192  ru.anekdot
@end example

It means that all points if 2:5021/19 set r/o for tver.sysop* echoareas and
fileareas except 2:5021/19.1 for all areas and 2:5021/19.2 can write
only to tver.sysop.talks from tver.sysop* areagroup. Last rule implements
a read-only status of ru.anekdot (echo)area for node 2:5021/192.

This statement can be repeated.

@node WriteOnly,  , ReadOnly, area management keywords
@subsection WriteOnly
@findex WriteOnly
@table @asis
@item Syntax:
@code{WriteOnly <addressMask> <areaMask>}
@item Example:
@code{WriteOnly 2:5021/19.* NobodyReadArea}
@end table

This statement set one or many links to writeonly for specified area masks.
If you write node address do it *without* trailing .0!

This statement can be repeated.


@node autocreate keywords, robot keywords, area management keywords, keywords
@section Autocreate keywords

@menu
* CreateAddUplink::             set default uplink for auto-created areas
* CreateAreasCase::             case of autocreated areas names
* CreateFwdNonPass::            autocreate non-passthru echoes in fwd.req. operations
* ReportRequester::             allow reporting link who requested area on autocreate
* ReportTo::                    set area or netmail for autocreate reports
@end menu


@node CreateAddUplink, CreateAreasCase, autocreate keywords, autocreate keywords
@subsection CreateAddUplink
@findex CreateAddUplink
@table @asis
@item Syntax:
@code{createAddUplink [<bool>]}
@item Example:
@code{createAddUplink}
@end table

If enabled, the link from which an area is auto-created is marked as
the default uplink for this area. It is turned off by default. Please note
that you cannot use autoCreateDefaults for that.

This statement cannot be repeated.

@node CreateAreasCase, CreateFwdNonPass, CreateAddUplink, autocreate keywords
@subsection CreateAreasCase
@findex CreateAreasCase
@table @asis
@item Syntax:
@code{createAreasCase (Lower|Upper)}
@item Example:
@code{createAreasCase Upper}
@end table

This statement defines case of areanames in autocreation.
Default is lower case.

This statement cannot be repeated.

@node CreateFwdNonPass, ReportRequester, CreateAreasCase, autocreate keywords
@subsection CreateFwdNonPass
@findex CreateFwdNonPass
@table @asis
@item Syntax:
@code{createFwdNonPass <bool>}
@item Example:
@code{createFwdNonPass}
@end table

Autocreate non-passthru echoes in forward request operations.
MsgBaseDir should be not passthrough!

This statement cannot be repeated.

@node ReportRequester, ReportTo, CreateFwdNonPass, autocreate keywords
@subsection ReportRequester
@findex ReportRequester
@table @asis
@item Syntax:
@code{reportRequester <bool>}
@item Example:
@code{reportRequester off}
@item Defaults:
@code{reportRequester on}
@end table

By default, the link who requested an area is displayed in the auto-create
report. This keyword disables showing it.

This statement cannot be repeated.

@node ReportTo,  , ReportRequester, autocreate keywords
@subsection ReportTo
@findex ReportTo
@table @asis
@item Syntax:
@code{ReportTo <string>}
@item Example:
@code{ReportTo netmail}
@end table

Set name of echoarea or netmailarea to place autocreate reports.

This statement cannot be repeated.

@node robot keywords,  , autocreate keywords, keywords
@section Robot definition keywords (Robot section)

@menu
* Robot::                       begin of Robot section
* FromName::                    set From: field in response messages
* HelpFile::                    file with help for areafix reports
* KillRequests::                delete areafix requests
* MsgSize::                     maximum areafix report size
* RobotNames::                  set additional areafix names
* RobotOrigin::                 set origin for areafix reports
* QueryReports::                insert linked areas list into areafix reports
* QueueFile::                   idle requests queue file for areafix
* ReportsAttr::                 set flags to areafix reports
* SplitStr::                    set split string for splitted areafix messages
* AutocreateFlag::              create this file-flag after auto-area-create
* NewAreaRefuseFile::           file with areas which we don't want to autocreate
* ForwardRequestTimeout::       requested from uplink area traffic timeout (in days)
* IdlePassthruTimeout::         timeout (in days) before unlink on uplink passthrough echo with one link (& some time later remove from config)
* KilledRequestTimeout::        wait time (in days) for kill area without links
* AutoAreaPause::               Enables or disables area pause algorythm
@end menu

@node Robot, FromName, robot keywords, robot keywords
@subsection Robot
@findex Robot
@table @asis
@item Syntax:
@code{Robot <robot name>}
@item Example:
@code{Robot AreaFix}
@end table

This keyword begins Robot section. All the following robot-related statements 
change the configuration of this robot until a new @code{Robot} statement is found. 
Currently used names are 'default', 'Areafix' and 'Filefix'. 
Values set for default robot are used as defaults for other robots.

@node FromName, HelpFile, Robot, robot keywords
@subsection FromName
@findex FromName
@table @asis
@item Syntax:
@code{FromName <string>}
@item Example:
@code{FromName "HPT AreaFix"}
@end table

    Use value from @code{FromName} in field @code{From} when
responding on messages to areafix. If this token not defined, name in
original message will be used. Example:
@example

1) FromName not defined in config:

Original message to areafix:
----------------------------
From: Sysop
To: ArEaFiX

AreaFix's response:
-------------------
From: ArEaFiX
To: Sysop

2) FromName "HPT AreaFix"

Original message to areafix:
----------------------------
From: Sysop
To: ArEaFiX

AreaFix's response:
-------------------
From: HPT AreaFix
To: Sysop

@end example

Also this value is being used when creating reports by qrep command.

@node HelpFile, KillRequests, FromName, robot keywords
@subsection HelpFile
@findex HelpFile
@table @asis
@item Syntax:
@code{HelpFile <file>}
@item Example:
@code{HelpFile /etc/ftn/areafix.hlp}
@end table

This is help file, which robot sends to link if he requests "%HELP".

This statement cannot be repeated.

@node KillRequests, MsgSize, HelpFile, robot keywords
@subsection KillRequests
@findex KillRequests
@table @asis
@item Syntax:
@code{KillRequests <bool>}
@item Example:
@code{KillRequests}
@end table

Delete requests from links to robot.

This statement cannot be repeated.

@node MsgSize, RobotNames, KillRequests, robot keywords
@subsection MsgSize
@findex MsgSize
@table @asis
@item Syntax:
@code{MsgSize <integer>}
@item Example:
@code{MsgSize 20}
@end table

This option set up maximum robot message size (20 kb).
If not defined, reports will be not splitted...

This statement cannot be repeated.

@node RobotNames, RobotOrigin, MsgSize, robot keywords
@subsection RobotNames
@findex RobotNames
@table @asis
@item Syntax:
@code{RobotNames <string>}
@item Example:
@code{RobotNames SqaFix, hptfix}
@end table

Set additional names for robot. Default names for Areafix robot are "areafix", "areamgr",
"hpt". Default names for Filefix robot are "FileFix", "FileMgr", "AllFix", "FileScan", "htick".

This statement cannot be repeated.

@node RobotOrigin, QueryReports, RobotNames, robot keywords
@subsection RobotOrigin
@findex RobotOrigin
@table @asis
@item Syntax:
@code{RobotOrigin <string>}
@item Example:
@code{RobotOrigin c0()1 $tAt10n}
@end table

the origin string in robot's reports will be like this:
 * Origin: c0()1 $tAt10n (<your addr>)

This statement cannot be repeated.

@node QueryReports, QueueFile, RobotOrigin, robot keywords
@subsection QueryReports
@findex QueryReports
@table @asis
@item Syntax:
@code{QueryReports <bool>}
@item Example:
@code{QueryReports off}
@end table

This statement enables/disables including linked areas list into all robot
replies.

Default: off.

This statement cannot be repeated.

@node QueueFile, ReportsAttr, QueryReports, robot keywords
@subsection QueueFile
@findex QueueFile
@table @asis
@item Syntax:
@code{QueueFile <string>}
@item Example:
@code{QueueFile /fido/datafiles/areafix.queue}
@end table

This command specifies the queue file containing your delayed forward-requests.
Hpt must have read/write rights for this file.
To use this feature run @code{hpt qupd} periodically.

@quotation Note
Don't set this to the same value for different robots. It may lead to confusion and unexpected behaviour.
@end quotation

This statement cannot be repeated.

@node ReportsAttr, SplitStr, QueueFile, robot keywords
@subsection ReportsAttr
@findex ReportsAttr
@table @asis
@item Syntax:
@code{ReportsAttr <attr>}
@item Example:
@code{ReportsAttr pvt loc k/s}
@item or
@code{ReportsAttr pvt,loc,k/s}
@end table

Set attributes to robot's reports.

Valid attributes are:
@table @asis
@item pvt
@item crash
@item read
@item sent
@item att
@item fwd
@item orphan
@item k/s
@item loc
@item fwd
@item xx2
@item frq
@item rrq
@item cpt
@item arq
@item urq
@item kfs
@item tfs
@item dir
@item imm
@item cfm
@item npd
@end table

Default is "pvt loc k/s npd".

If this statement is used inside Link or LinkDefaults section, it sets
attributes for this particular link. Otherwise it defines attributes used
by default.

This statement can be repeated for different links.

@node SplitStr, AutocreateFlag, ReportsAttr, robot keywords
@subsection SplitStr
@findex SplitStr
@table @asis
@item Syntax:
@code{SplitStr <string>}
@item Example:
@code{SplitStr > Message splitted. To be continued...}
@end table

This string added after splitted robot's messages.

This statement cannot be repeated.

@node AutocreateFlag, NewAreaRefuseFile, SplitStr, robot keywords
@subsection AutocreateFlag
@findex AutocreateFlag
@table @asis
@item Syntax:
@code{AutocreateFlag <file>}
@item Example:
@code{AutocreateFlag /etc/ftn/flags/aac.flag}
@end table

Create file-flag after autocreating area. This feature can be used
for execute some scripts after tossing.

This statement cannot be repeated.

@node NewAreaRefuseFile, ForwardRequestTimeout, AutocreateFlag, robot keywords
@subsection NewAreaRefuseFile
@findex NewAreaRefuseFile
@table @asis
@item Syntax:
@code{newAreaRefuseFile <file>}
@item Example:
@code{newAreaRefuseFile /etc/ftn/areas/dontcrte.lst}
@end table

This token defines a file which will be used when autocreating echoarea.
File contains list of areas which we don't allow to autocreate.
Subscribtion on such areas is also refused because such areas are marked as
dead. Each line of this file is a mask of echotag.

Example:
@table @asis
@item RU.LIST.CITYCAT.*
@item SU.KASCHENKO.LOCAL
@end table

This statement cannot be repeated.

@node ForwardRequestTimeout, IdlePassthruTimeout, NewAreaRefuseFile, robot keywords
@subsection ForwardRequestTimeout
@findex ForwardRequestTimeout
@table @asis
@item Syntax:
@code{ForwardRequestTimeout <number>}
@item Example:
@code{ForwardRequestTimeout 7}
@end table

This statement specifies time to wait (in days) for area requested from
uplink. If there is no traffic in this area, @code{<program> qupd} unsubscribes
area from this uplink and subscribes to it at next uplink. If next uplink
for this echoarea not avaiable, @code{<program> qupd} removes echoarea from queue.

To use this feature run @code{<program> qupd} daily.

This token requires keyword QueueFile. @xref{QueueFile}.

Default is 7 days.

This statement cannot be repeated.

@node IdlePassthruTimeout, KilledRequestTimeout, ForwardRequestTimeout, robot keywords
@subsection IdlePassthruTimeout
@findex IdlePassthruTimeout
@table @asis
@item Syntax:
@code{IdlePassthruTimeout <number>}
@item Example:
@code{IdlePassthruTimeout 3}
@end table

This statement specifies time to wait (in days) before unsubscribing echoarea
from uplink after the time last downlink unsubscribed (one uplink rest).

To use this feature run @code{<program> qupd} daily.

This token requires keyword QueueFile. @xref{QueueFile}.

Default is 3 days.

This statement cannot be repeated.

@node KilledRequestTimeout, AutoAreaPause, IdlePassthruTimeout, robot keywords
@subsection KilledRequestTimeout
@findex KilledRequestTimeout
@table @asis
@item Syntax:
@code{KilledRequestTimeout <number>}
@item Example:
@code{KilledRequestTimeout 4}
@end table

This statement specified time wait (days) for delete from config echoarea after
unsubscribe it from uplink (last link).

Run @code{<program> qupd} daily for use this feature.

This token requires keyword QueueFile. @xref{QueueFile}.

Default is 4 days.

This statement cannot be repeated.

@node AutoAreaPause,  , KilledRequestTimeout, robot keywords
@subsection AutoAreaPause
@findex AutoAreaPause
@table @asis
@item Syntax:
@code{AutoAreaPause <bool>}
@item Example:
@code{AutoAreaPause}
@end table

default: off (disabled)

Enables or disables area pause algorythm. If area is passthrough
and there is only uplink alive (link with "-def" flag set) while other links
are paused, unsubscribe message will be sent to uplink and "-paused" flag
will be set to area. If another link subscribes to the area, or one of already
paused links resumes his subscription, area will be subscribed at uplink again
and "-paused" flag cleared. Note, that links cannot send messages to paused
area, they will be moved to badmail. If enabled, algorythm also works if link
is paused by AutoPassive.

You may disable or enable algorythm for a particular area by setting one of
"-noautoareapause" or "-autoareapause" flags.

This statement cannot be repeated.


@c <!---------------------------------------------------------------------------------------------->

@node converting, tparser, keywords, Top
@chapter Converting fidoconfig
Since popular mail readers, BBS programs and mailers does not support
fidoconfig, we have developed programs that convert your fidoconfig to
these config file formats.

Golded+ by Alexander A.Aganichev supports fidoconfig and converter isn't needs,
MsgEd TE 6.x and above integrated with fidoconfig.

Also we have developed program to convert configuration files of Fastecho
tosser program into fidoconfig, to make migration from Fastecho to fidoconfig
(and hpt) more easy.

@enumerate
@item fconf2golded
@*Converts fidoconfig to configuration file of Golded by Odinn Sorensen.

Synopsys:@*
@command{fconf2golded <goldedConfigFileName> [<default.cfg>]}

Example:
@example
fconf2golded ~/golded/golded.cfg ~/golded/goldDefaults.cfg
@end example

@item fconf2msged
@*Converts fidoconfig to configuration file of MgsEd sysce version 6.

Synopsys:@*
@command{fconf2msged <msgedConfigFileName>}

Example:
@example
fconf2msged ~/msged.areas
@end example

@item fconf2aquaed
@*Convert fidoconfig to configuration file of AquaEd.

Synopsys:@*
@command{fconf2aquaed <aquaedConfigFileName> [<default.cfg>]}
(if you specify default.cfg there will be a include <default.cfg> generated in
your config file)

Example:
@example
fconf2aquaed ~/aquaed/aquaed.cfg
@end example

@item fconf2binkd@*
Fidoconfig to binkd config converter: generates passwords file for binkd or
generates simple binkd config file (you may include it into real config).

Synopsys:@*
@command{fconf2binkd [-v] [-h] [-c path/to/fidoconfig] [-f] [-p] [output_file_name]}

See details in fconf2binkd(1) man page or fconf2binkd.html.

Examples:
@example
fconf2binkd -c ../husky/config -p binkd.pwd
fconf2binkd binkd.conf
@end example

@item fconf2fidogate@*
Convert fidoconfig into config file of fidogate.

Synopsys:@*
@command{fconf2fidogate <FidoGateAreasFileName> [<default.cfg>]}
(you may read config defaults from default.cfg)

Example:
@example
fconf2fidogate /usr/local/lib/fidogate/areas
@end example

@item fconf2squish@*
Convert fidoconfig into config file of Squish.

Synopsys:@*
@command{fconf2squish (<squish.cfg>|-) [<default.cfg>]}
(- as squish.cfg means stdout)
(you may read config defaults from default.cfg)

See details in fconf2squish(1) man page or fconf2squish.html

Examples:
@example
fconf2squish ~/squish/squish.cfg
fconf2squish - | grep -i echo >sqechoes.cfg
@end example

@item fconf2tornado@*
Convert fidoconfig into config file of Tornado BBS.

Synopsys:@*
@command{fconf2tornado -[command [-command...]] <tornado.ctl> [<default.cfg>]}
(you may read config defaults from default.cfg)

See details in fconf2tornado(1) man page or fconf2tornado.html

Examples:
@example
fconf2tornado -ff -g -grLocal filearea.ctl temp.ctl
fconf2tornado -mel -ss256 c:\bbs\tornado\msgarea.ctl
@end example

@item fecfg2fconf@*
Convert configuration of Fastecho into fidoconfig.

Synopsys:@*
@command{fecfg2fconf [path]fastecho.cfg [output fidoconfig]}

Example:
@example
fecfg2fconf c:\fido\fastecho\fastecho.cfg fidoconfig.tmp
@end example

@end enumerate

@node tparser, contact, converting, Top
@chapter Testing the config
You should run @command{tparser} @sc{everytime} you have changed the config. If tparser
found error in config please correct your config file and try again.

@table @asis
@item Syntax:
@command{tparser [-h|@minus{}-help] [-Dvar=value] [-E] [-P] [/path/to/config/file]}
@item Example:
@example
@command{tparser -Dmodule=hpt | less}
@end example
@end table

tparser (like any fidoconfig program) will display error messages if you have
made an error in the config. It also may be display some warnings about your
config settings. It will grumble on every Keyword it does not know. It will
stop after the first error (not warning) to give you the ability to change
your config.

@section Options

@table @asis
@item -Dvar=value
Set the config variable @code{var} to @code{value}.
@item -E
Dumps config into stdout (all config variables expanded).
@item -h
@itemx @minus{}-help
Display usage information.
@item -P
Try to create non-existing directories.
@end table


@node contact,  , tparser, Top
@chapter Contacting the author
You can reach me at

@example
@email{mtt@@tichy.de}
2:2432/645
@end example

and in the fido echoarea

@example
linux.develop.ger
fidosoft.husky
@end example

Max Levenkov:
@example
@email{sackett@@mail.ru}
ru.husky (russian)
ru.echoprocessors (russian)
fidosoft.husky (english)
@end example

The actual fidoconfig library and other fido software will be on
@url{http://husky.sourceforge.net}.

@bye
